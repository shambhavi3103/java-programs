//doubly Linked list 

class Node{
    int data;
    Node prev;
    Node next;
    
    //creating a constructor 
    
    Node(int data){
        this.data = data;
        this.prev=null;
        this.next = null;
    }
}

public class DLL{
    
    Node head = null;
    
    // creating a insertatbeginning 
    
    public void insertatbeginning(int data){
        Node newNode = new Node(data);
        newNode.next = head;
        if(head!=null){
            head.prev=newNode;
            
        }
        head=newNode;
    }
    //InsertAtEnd 
    
    public void InsertAtEnd(int data){
        Node newNode = new Node(data);
         Node temp = head;
         while(temp.next!=null){
             temp = temp.next;
             
         }
         temp.next=newNode;
         newNode.prev = temp;
    }
    
    // deleteatbeg
   
   public void deleteatbeg(){
       if(head==null){
           System.out.println("list is empty");
       }
       head=head.next;
       
       if(head!=null){
           head.prev=null;
       }
   }
   

    //display method 
    
    public void display(){
        // if(head==null){
        //     head=newNode;
        //     return;
        // }
        Node temp = head;
        while(temp!=null){
            System.out.print(temp.data + "<->");
           temp = temp.next;

        }
         
        System.out.println("null");
    }

    
    public static void main(String[] args){
        DLL list = new DLL();
        list.insertatbeginning(10);
        list.insertatbeginning(20);
        list.insertatbeginning(30);
        list.insertatbeginning(40);
        list.InsertAtEnd(50);
        list.InsertAtEnd(70);
        list.InsertAtEnd(80);
        list.deleteatbeg();
        list.deleteatbeg();
        list.deleteatbeg();
        
        list.display();
    }
}
